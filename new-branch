#!/bin/bash

# Usage: . new-branch <project-name> <clone-name>
#
# Script to create a new clone for Python development.
#
# Supported project name values:
#
#   cpython (http://hg.python.org/cpython):
#
#     Also builds Python and makes the Docs.
#
#   devguide (http://hg.python.org/devguide):
#
#     Also makes the docs.
#
# Using the dot command allows the directory change to persist so that
# you end up in the clone after running the script.
#
# This script assumes it is run from the following directory structure:
#
# <cwd>
#     cpython/
#         <main hg checkout>
#     devguide/
#         <main hg checkout>
#     clones/
#     issues/
#         <patches and supplementary files>

# TODO: check that both command-line arguments were provided.
# TODO: turn this into a Python script.

# Create supplementary directory.
mkdir issues/$2
if [ $? -ne 0 ]; then
    echo "exiting: directory already exists"
    exit
fi
touch issues/$2/NOTES-$2.txt

pushd $1
if [ $? -ne 0 ]; then
    echo "exiting: unrecognized project name '$1'"
    exit
fi
hg pull
hg update
popd
hg clone $1 clones/$2

pushd clones/$2
if [ $? -ne 0 ]; then
    # To avoid opening the whole cwd next.
    echo "exiting: failed to enter clone directory"
    exit
fi
mate .

# Use = for string comparison.
if [ $1 = "cpython" ]; then
    ./configure --with-pydebug && make -j2
    pushd Doc
    make html
    if [ $? -ne 0 ]; then
        echo "exiting: error making html"
        exit
    fi
    open build/html/index.html
    popd
fi
if [ $1 = "devguide" ]; then
    make html
    if [ $? -ne 0 ]; then
        echo "exiting: error making html"
        exit
    fi
    open _build/html/index.html
fi
